<?xml version='1.0' encoding='UTF-8' ?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<chapter xmlns="http://docbook.org/ns/docbook" xml:id="config.noitd" version="5">
  <title>noitd configuration</title>
  <example>
  <title>Basic noitd configuration struture</title>
  <programlisting><![CDATA[
  <noit>
    <eventer/>
    <modules>
      <...>
        <module />
      </...>
    </modules>
    <logs>
      <...>
        <log>
          <outlet />
          <outlet />
        </log>
      </...>
    </logs>
    <listeners>
      <...>
        <listener/>
        <listener>
          <config />
          <sslconfig />
        <listener>
      </...>
    </listeners>
    <checks>
      <...>
        <check uuid="xxx" />
      </...>
    </checks>
  </noit>
]]></programlisting>
</example>

<section xml:id="config.noitd.section.logs.special">
  <title>Special log names</title>

  <variablelist>
  <varlistentry><term>check</term><listitem><para>
   When a check is altered in any way (including creation),
   the identifying attributes, including the uuid, are logged to this
   facility.

   <programlisting>
   'C' TIMESTAMP UUID TARGET MODULE NAME
   </programlisting>
  </para></listitem></varlistentry>

  <varlistentry><term>status</term><listitem><para>
   When a check status changes (either availability or
   state) and neither the new state nor the old state are "unknown", it
   is considered a state change for the check.  The new availability
   and new state are logged to this facility.

   <programlisting>
   'S' TIMESTAMP UUID STATE AVAILABILITY DURATION STATUS_MESSAGE
   </programlisting>
  </para></listitem></varlistentry>

  <varlistentry><term>metrics</term><listitem><para>
   Each time a check is completed, the various metrics
   that were observed by the check are logged to this facility.  The
   VALUE is always a string or [[null]] (never binary encoded/packed).
   The TYPE indicates the datatype the check intended when it was
   observed.

   <programlisting>
   'M' TIMESTAMP UUID NAME TYPE VALUE
   </programlisting>

   <variablelist>
     <varlistentry><term>NAME</term><listitem><para>is the name of the metric
      and the encouraged format for this is "name`subname`subsubname`etc"</para></listitem>
      </varlistentry>

     <varlistentry><term>TYPE</term><listitem>
       <variablelist>
         <varlistentry><term>i</term><listitem><para>INT32</para></listitem></varlistentry>
         <varlistentry><term>I</term><listitem><para>UINT32</para></listitem></varlistentry>
         <varlistentry><term>l</term><listitem><para>INT64</para></listitem></varlistentry>
         <varlistentry><term>L</term><listitem><para>UINT64</para></listitem></varlistentry>
         <varlistentry><term>n</term><listitem><para>DOUBLE</para></listitem></varlistentry>
         <varlistentry><term>s</term><listitem><para>STRING</para></listitem></varlistentry>
       </variablelist>
       </listitem>
      </varlistentry>
   </variablelist>
  </para>
  </listitem>
  </varlistentry>
</variablelist>

<example>
<title>Sample configuration for the log section</title>
<programlisting><![CDATA[
  <logs>
    <console>
      <outlet name="stderr" />
      <log name="error" />
      <log name="debug" disabled="true" />
    </console>
    <log name="feed" type="jlog" path="/var/log/noitd.feed" />
    <feeds>
      <outlet name="feed" />
      <log name="check" />
      <log name="metrics" />
      <log name="status">
        <outlet name="error" />
      </log>
    </feeds>
  </logs>
]]></programlisting>
</example>

 <para>In the above example:</para>
 <itemizedlist>
   <listitem><para>
   a &lt;console&gt; metagroup is created for the purpose of inheriting the
   "stderr" outlet.  The logs named "error" and "debug" are
   instantiated and inherit the "stderr" outlet.  However, "debug" is
   disabled, so no input to the "debug" log will be written anywhere.
   </para></listitem>

   <listitem><para>
   a log named "feed" is created of type "jlog" writing to the
   "/var/log/noitd.feed" directory (jlogs paths are directories, whereas 
   "file" paths are filenames).
   </para></listitem>

   <listitem><para>
   a &lt;feeds&gt; metagroup is created for the purpose of inheriting the
   "feed" outlet.  The logs "check," "metrics," and "status" are
   instantiated and will log via the "feed" outlet (all writing to the
   same jlog).  Additionally, the "status" feed is given an additional
   outlet named "error" so we will see inputs to status in both the
   "feed" jlog and on the console ("stderr").
   </para></listitem>
 </itemizedlist>
</section>
</chapter>
