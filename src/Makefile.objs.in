UDNS_LIB_OBJS=udns/udns_dn.o udns/udns_dntosp.o udns/udns_parse.o \
        udns/udns_resolver.o udns/udns_init.o udns/udns_misc.o \
        udns/udns_XtoX.o udns/udns_rr_a.o udns/udns_rr_ptr.o udns/udns_rr_mx.o \
        udns/udns_rr_txt.o udns/udns_bl.o udns/udns_rr_srv.o \
        udns/udns_rr_naptr.o udns/udns_codes.o udns/udns_jran.o
JSON_LIB_OBJS=json-lib/arraylist.lo json-lib/debug.lo json-lib/json_object.lo \
        json-lib/json_tokener.lo json-lib/json_util.lo json-lib/linkhash.lo \
        json-lib/printbuf.lo
NOITEDIT_LIB_OBJS=noitedit/chared.lo noitedit/common.lo noitedit/el.lo \
        noitedit/emacs.lo noitedit/fcns.lo noitedit/fgetln.lo noitedit/help.lo \
        noitedit/hist.lo noitedit/history.lo noitedit/key.lo noitedit/map.lo \
        noitedit/parse.lo noitedit/prompt.lo noitedit/read.lo noitedit/readline.lo \
        noitedit/refresh.lo noitedit/search.lo noitedit/sig.lo noitedit/strlcpy.lo \
        noitedit/term.lo noitedit/tokenizer.lo noitedit/tty.lo noitedit/vi.lo
JLOG_LIB_OBJS=jlog/jlog.lo jlog/jlog_hash.lo jlog/jlog_io.lo
EVENTER_OBJS=@EVENTER_OBJS@
EVENTER_IMPL_OBJS=$(EVENTER_OBJS:%.lo=eventer/%.lo)
ATOMIC_REL_OBJS=@ATOMIC_OBJS@
ATOMIC_OBJS=$(ATOMIC_REL_OBJS:%.lo=utils/%.lo)
EVENTER_LIB_OBJS=eventer/OETS_asn1_helper.lo eventer/eventer.lo \
        eventer/eventer_POSIX_fd_opset.lo eventer/eventer_SSL_fd_opset.lo \
        eventer/eventer_impl.lo eventer/eventer_jobq.lo $(EVENTER_IMPL_OBJS)
NOIT_UTILS_OBJS=utils/noit_b32.lo utils/noit_b64.lo utils/noit_btrie.lo \
        utils/noit_getip.lo utils/noit_hash.lo utils/noit_lockfile.lo \
        utils/noit_log.lo utils/noit_mkdir.lo utils/noit_security.lo \
        utils/noit_sem.lo utils/noit_skiplist.lo utils/noit_str.lo \
        utils/noit_watchdog.lo utils/noit_memory.lo $(ATOMIC_OBJS)
YAJL_LIB_OBJS=yajl-lib/yajl.lo yajl-lib/yajl_alloc.lo yajl-lib/yajl_buf.lo \
        yajl-lib/yajl_encode.lo yajl-lib/yajl_gen.lo yajl-lib/yajl_lex.lo \
        yajl-lib/yajl_parser.lo yajl-lib/yajl_tree.lo yajl-lib/yajl_version.lo

ENABLE_LUA=@ENABLE_LUA@

ifeq (LuaJIT,$(ENABLE_LUA))
LUAJIT= lib_base.o lib_math.o lib_bit.o lib_string.o lib_table.o \
	lib_io.o lib_os.o lib_package.o lib_debug.o lib_jit.o lib_ffi.o \
	lj_vm.o lj_gc.o lj_err.o lj_char.o lj_bc.o lj_obj.o \
	lj_str.o lj_tab.o lj_func.o lj_udata.o lj_meta.o lj_debug.o \
	lj_state.o lj_dispatch.o lj_vmevent.o lj_vmmath.o lj_strscan.o \
	lj_api.o lj_lex.o lj_parse.o lj_bcread.o lj_bcwrite.o lj_load.o \
	lj_ir.o lj_opt_mem.o lj_opt_fold.o lj_opt_narrow.o \
	lj_opt_dce.o lj_opt_loop.o lj_opt_split.o lj_opt_sink.o \
	lj_mcode.o lj_snap.o lj_record.o lj_crecord.o lj_ffrecord.o \
	lj_asm.o lj_trace.o lj_gdbjit.o \
	lj_ctype.o lj_cdata.o lj_cconv.o lj_ccall.o lj_ccallback.o \
	lj_carith.o lj_clib.o lj_cparse.o \
	lj_lib.o lj_alloc.o lib_aux.o \
	lib_init.o
LUADIR=LuaJIT
LUACFLAGS+=-DLUAJIT_UNWIND_INTERNAL
LUA_OBJS=$(LUAJIT:%=$(LUADIR)/src/%)

$(LUADIR)/src/host/minilua:
	@$(MAKE) -s -C $(LUADIR)/src HOST_CC="gcc $(LUACFLAGS)" TARGET_CFLAGS="$(LUACFLAGS)" host/minilua

$(LUADIR)/src/host/buildvm:
	@$(MAKE) -s -C $(LUADIR)/src HOST_CC="gcc $(LUACFLAGS)" TARGET_CFLAGS="$(LUACFLAGS)" host/buildvm

$(LUADIR)/src/%.o:	$(LUADIR)/src/host/minilua $(LUADIR)/src/host/buildvm
	@$(MAKE) -s -C $(LUADIR)/src HOST_CC="gcc $(LUACFLAGS)" TARGET_CFLAGS="$(LUACFLAGS)" `echo $@ | sed -e 's/.*\///g;'`
else
ifeq (lua52,$(ENABLE_LUA))
LUA52= lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o \
	lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o \
	ltm.o lundump.o lvm.o lzio.o \
	lauxlib.o lbaselib.o lbitlib.o lcorolib.o ldblib.o liolib.o \
	lmathlib.o loslib.o lstrlib.o ltablib.o loadlib.o linit.o
LUADIR=lua
LUACFLAGS+=-DLUA_COMPAT_ALL -DLUA_USE_POSIX -DLUA_USE_DLOPEN
LUA_OBJS=$(LUA52:%=$(LUADIR)/src/%)
$(LUADIR)/src/%.o:
	@echo "- compiling $<"
	@(cd $(LUADIR)/src && $(CC) $(LUACFLAGS) -o $(@:$(LUADIR)/src/%.o=%.o) -c $(@:$(LUADIR)/src/%.o=%.c))
else
endif
endif

.PRECIOUS:  $(LUADIR)/src/%.o
