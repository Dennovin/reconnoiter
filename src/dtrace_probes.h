/*
 * Generated by dtrace(1M).
 */

#ifndef	_DTRACE_PROBES_H
#define	_DTRACE_PROBES_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define STRATCON_NOIT_STABILITY "___dtrace_stability$stratcon_noit$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define STRATCON_NOIT_TYPEDEFS "___dtrace_typedefs$stratcon_noit$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	STRATCON_NOIT_CONNECT(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$connect$v1$696e74$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_CONNECT_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$connect$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_CONNECT_CLOSE(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$connect__close$v1$696e74$63686172202a$63686172202a$63686172202a$696e74$696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_CONNECT_CLOSE_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$connect__close$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_CONNECT_FAILED(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$connect__failed$v1$696e74$63686172202a$63686172202a$63686172202a$696e74(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_CONNECT_FAILED_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$connect__failed$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_CONNECT_SSL(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$connect__ssl$v1$696e74$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_CONNECT_SSL_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$connect__ssl$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_CONNECT_SSL_FAILED(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$connect__ssl__failed$v1$696e74$63686172202a$63686172202a$63686172202a$63686172202a$696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_CONNECT_SSL_FAILED_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$connect__ssl__failed$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_CONNECT_SSL_SUCCESS(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$connect__ssl__success$v1$696e74$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_CONNECT_SSL_SUCCESS_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$connect__ssl__success$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_CONNECT_SUCCESS(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$connect__success$v1$696e74$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_CONNECT_SUCCESS_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$connect__success$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_RESCHEDULE(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$reschedule$v1$696e74$63686172202a$63686172202a$63686172202a$696e74(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_RESCHEDULE_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$reschedule$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_SHUTDOWN_PERMANENT(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$shutdown__permanent$v1$696e74$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_SHUTDOWN_PERMANENT_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$shutdown__permanent$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_STREAM_BODY(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$stream__body$v1$696e74$63686172202a$63686172202a$63686172202a$696e74$696e74$696e74$696e74$63686172202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_STREAM_BODY_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$stream__body$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_STREAM_CHECKPOINT(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$stream__checkpoint$v1$696e74$63686172202a$63686172202a$63686172202a$696e74$696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_STREAM_CHECKPOINT_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$stream__checkpoint$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_STREAM_COUNT(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$stream__count$v1$696e74$63686172202a$63686172202a$63686172202a$696e74(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_STREAM_COUNT_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$stream__count$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	STRATCON_NOIT_STREAM_HEADER(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) \
do { \
	__asm__ volatile(".reference " STRATCON_NOIT_TYPEDEFS); \
	__dtrace_probe$stratcon_noit$stream__header$v1$696e74$63686172202a$63686172202a$63686172202a$696e74$696e74$696e74$696e74$696e74(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); \
	__asm__ volatile(".reference " STRATCON_NOIT_STABILITY); \
} while (0)
#define	STRATCON_NOIT_STREAM_HEADER_ENABLED() \
	({ int _r = __dtrace_isenabled$stratcon_noit$stream__header$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$stratcon_noit$connect$v1$696e74$63686172202a$63686172202a$63686172202a(int, const char *, const char *, const char *);
extern int __dtrace_isenabled$stratcon_noit$connect$v1(void);
extern void __dtrace_probe$stratcon_noit$connect__close$v1$696e74$63686172202a$63686172202a$63686172202a$696e74$696e74(int, const char *, const char *, const char *, int, int);
extern int __dtrace_isenabled$stratcon_noit$connect__close$v1(void);
extern void __dtrace_probe$stratcon_noit$connect__failed$v1$696e74$63686172202a$63686172202a$63686172202a$696e74(int, const char *, const char *, const char *, int);
extern int __dtrace_isenabled$stratcon_noit$connect__failed$v1(void);
extern void __dtrace_probe$stratcon_noit$connect__ssl$v1$696e74$63686172202a$63686172202a$63686172202a(int, const char *, const char *, const char *);
extern int __dtrace_isenabled$stratcon_noit$connect__ssl$v1(void);
extern void __dtrace_probe$stratcon_noit$connect__ssl__failed$v1$696e74$63686172202a$63686172202a$63686172202a$63686172202a$696e74(int, const char *, const char *, const char *, const char *, int);
extern int __dtrace_isenabled$stratcon_noit$connect__ssl__failed$v1(void);
extern void __dtrace_probe$stratcon_noit$connect__ssl__success$v1$696e74$63686172202a$63686172202a$63686172202a(int, const char *, const char *, const char *);
extern int __dtrace_isenabled$stratcon_noit$connect__ssl__success$v1(void);
extern void __dtrace_probe$stratcon_noit$connect__success$v1$696e74$63686172202a$63686172202a$63686172202a(int, const char *, const char *, const char *);
extern int __dtrace_isenabled$stratcon_noit$connect__success$v1(void);
extern void __dtrace_probe$stratcon_noit$reschedule$v1$696e74$63686172202a$63686172202a$63686172202a$696e74(int, const char *, const char *, const char *, int);
extern int __dtrace_isenabled$stratcon_noit$reschedule$v1(void);
extern void __dtrace_probe$stratcon_noit$shutdown__permanent$v1$696e74$63686172202a$63686172202a$63686172202a(int, const char *, const char *, const char *);
extern int __dtrace_isenabled$stratcon_noit$shutdown__permanent$v1(void);
extern void __dtrace_probe$stratcon_noit$stream__body$v1$696e74$63686172202a$63686172202a$63686172202a$696e74$696e74$696e74$696e74$63686172202a(int, const char *, const char *, const char *, int, int, int, int, const char *);
extern int __dtrace_isenabled$stratcon_noit$stream__body$v1(void);
extern void __dtrace_probe$stratcon_noit$stream__checkpoint$v1$696e74$63686172202a$63686172202a$63686172202a$696e74$696e74(int, const char *, const char *, const char *, int, int);
extern int __dtrace_isenabled$stratcon_noit$stream__checkpoint$v1(void);
extern void __dtrace_probe$stratcon_noit$stream__count$v1$696e74$63686172202a$63686172202a$63686172202a$696e74(int, const char *, const char *, const char *, int);
extern int __dtrace_isenabled$stratcon_noit$stream__count$v1(void);
extern void __dtrace_probe$stratcon_noit$stream__header$v1$696e74$63686172202a$63686172202a$63686172202a$696e74$696e74$696e74$696e74$696e74(int, const char *, const char *, const char *, int, int, int, int, int);
extern int __dtrace_isenabled$stratcon_noit$stream__header$v1(void);

#else

#define	STRATCON_NOIT_CONNECT(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	STRATCON_NOIT_CONNECT_ENABLED() (0)
#define	STRATCON_NOIT_CONNECT_CLOSE(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	} while (0)
#define	STRATCON_NOIT_CONNECT_CLOSE_ENABLED() (0)
#define	STRATCON_NOIT_CONNECT_FAILED(arg0, arg1, arg2, arg3, arg4) \
do { \
	} while (0)
#define	STRATCON_NOIT_CONNECT_FAILED_ENABLED() (0)
#define	STRATCON_NOIT_CONNECT_SSL(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	STRATCON_NOIT_CONNECT_SSL_ENABLED() (0)
#define	STRATCON_NOIT_CONNECT_SSL_FAILED(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	} while (0)
#define	STRATCON_NOIT_CONNECT_SSL_FAILED_ENABLED() (0)
#define	STRATCON_NOIT_CONNECT_SSL_SUCCESS(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	STRATCON_NOIT_CONNECT_SSL_SUCCESS_ENABLED() (0)
#define	STRATCON_NOIT_CONNECT_SUCCESS(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	STRATCON_NOIT_CONNECT_SUCCESS_ENABLED() (0)
#define	STRATCON_NOIT_RESCHEDULE(arg0, arg1, arg2, arg3, arg4) \
do { \
	} while (0)
#define	STRATCON_NOIT_RESCHEDULE_ENABLED() (0)
#define	STRATCON_NOIT_SHUTDOWN_PERMANENT(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	STRATCON_NOIT_SHUTDOWN_PERMANENT_ENABLED() (0)
#define	STRATCON_NOIT_STREAM_BODY(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) \
do { \
	} while (0)
#define	STRATCON_NOIT_STREAM_BODY_ENABLED() (0)
#define	STRATCON_NOIT_STREAM_CHECKPOINT(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	} while (0)
#define	STRATCON_NOIT_STREAM_CHECKPOINT_ENABLED() (0)
#define	STRATCON_NOIT_STREAM_COUNT(arg0, arg1, arg2, arg3, arg4) \
do { \
	} while (0)
#define	STRATCON_NOIT_STREAM_COUNT_ENABLED() (0)
#define	STRATCON_NOIT_STREAM_HEADER(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) \
do { \
	} while (0)
#define	STRATCON_NOIT_STREAM_HEADER_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */

#define NOIT_CHECK_STABILITY "___dtrace_stability$noit_check$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define NOIT_CHECK_TYPEDEFS "___dtrace_typedefs$noit_check$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	NOIT_CHECK_DISPATCH(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " NOIT_CHECK_TYPEDEFS); \
	__dtrace_probe$noit_check$dispatch$v1$63686172202a$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " NOIT_CHECK_STABILITY); \
} while (0)
#define	NOIT_CHECK_DISPATCH_ENABLED() \
	({ int _r = __dtrace_isenabled$noit_check$dispatch$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	NOIT_CHECK_METRIC(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " NOIT_CHECK_TYPEDEFS); \
	__dtrace_probe$noit_check$metric$v1$63686172202a$63686172202a$63686172202a$63686172202a$63686172202a$696e74$63686172202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " NOIT_CHECK_STABILITY); \
} while (0)
#define	NOIT_CHECK_METRIC_ENABLED() \
	({ int _r = __dtrace_isenabled$noit_check$metric$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	NOIT_CHECK_STATUS(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " NOIT_CHECK_TYPEDEFS); \
	__dtrace_probe$noit_check$status$v1$63686172202a$63686172202a$63686172202a$63686172202a$696e74$696e74$63686172202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " NOIT_CHECK_STABILITY); \
} while (0)
#define	NOIT_CHECK_STATUS_ENABLED() \
	({ int _r = __dtrace_isenabled$noit_check$status$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$noit_check$dispatch$v1$63686172202a$63686172202a$63686172202a$63686172202a(const char *, const char *, const char *, const char *);
extern int __dtrace_isenabled$noit_check$dispatch$v1(void);
extern void __dtrace_probe$noit_check$metric$v1$63686172202a$63686172202a$63686172202a$63686172202a$63686172202a$696e74$63686172202a(const char *, const char *, const char *, const char *, const char *, int, const char *);
extern int __dtrace_isenabled$noit_check$metric$v1(void);
extern void __dtrace_probe$noit_check$status$v1$63686172202a$63686172202a$63686172202a$63686172202a$696e74$696e74$63686172202a(const char *, const char *, const char *, const char *, int, int, const char *);
extern int __dtrace_isenabled$noit_check$status$v1(void);

#else

#define	NOIT_CHECK_DISPATCH(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	NOIT_CHECK_DISPATCH_ENABLED() (0)
#define	NOIT_CHECK_METRIC(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	} while (0)
#define	NOIT_CHECK_METRIC_ENABLED() (0)
#define	NOIT_CHECK_STATUS(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	} while (0)
#define	NOIT_CHECK_STATUS_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _DTRACE_PROBES_H */
